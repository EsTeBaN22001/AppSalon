if(document.querySelector(".app")){const e=e=>document.querySelector(e);let t=1;function tabs(){e(".tabs").addEventListener("click",(function(e){t=parseInt(e.target.dataset.step),showSection()}))}function showSection(){e(".show").classList.remove("show");const n=e("#step-"+t);n.classList.remove("hide"),n.classList.add("show");e(".current").classList.remove("current");e(`[data-step="${t}"]`).classList.add("current"),paginatorButtons()}function paginatorButtons(){const n=e("#previous"),a=e("#next");1===t&&(n.classList.add("opacity0"),a.classList.remove("opacity0")),2===t&&(n.classList.remove("opacity0"),a.classList.remove("opacity0")),3===t&&(a.classList.add("opacity0"),n.classList.remove("opacity0"),showSummary())}function previousPage(){e("#previous").addEventListener("click",(function(){t--,showSection()}))}function nextPage(){e("#next").addEventListener("click",(function(){t++,showSection()}))}e(".tabs")&&(tabs(),paginatorButtons(),previousPage(),nextPage())}const $=e=>document.querySelector(e),quote={id:"",name:"",date:"",time:"",services:[]};async function consultApi(){try{const e="http://localhost:3000/api/services",t=await fetch(e);showServices(await t.json())}catch(e){console.log(e)}}function showServices(e){e.forEach(e=>{const{id:t,name:n,price:a}=e,s=document.createElement("p");s.classList.add("name-service"),s.textContent=n;const o=document.createElement("p");o.classList.add("price-service"),o.textContent="$"+a;const c=document.createElement("div");c.classList.add("service"),c.dataset.serviceId=t,c.appendChild(s),c.appendChild(o),c.onclick=function(){selectService(e)},$("#services").appendChild(c)})}function selectService(e){const{id:t}=e,{services:n}=quote,a=$(`[data-service-id="${t}"]`);n.some(e=>e.id===t)?(quote.services=n.filter(e=>e.id!==t),a.classList.remove("selected")):(quote.services=[...n,e],a.classList.add("selected"))}function clientId(){quote.id=$("#id").value}function clientName(){quote.name=$("#name").value}function selectDate(){$("#date").addEventListener("input",(function(e){const t=new Date(e.target.value).getUTCDay();[6,0].includes(t)?(quote.date="",showAlert("Fines de semana no permitidos","error",".form")):quote.date=e.target.value}))}function selectTime(){$("#time").addEventListener("input",(function(e){const t=e.target.value.split(":")[0];t<9||t>21?(e.target.value="",showAlert("Hora no válida","error",".form")):quote.time=e.target.value}))}function showAlert(e,t,n,a=!0){const s=$(".alert");s&&s.remove();const o=document.createElement("div");o.textContent=e,o.classList.add("alert"),o.classList.add(t);$(n).appendChild(o),a&&setTimeout(()=>{o.remove()},3e3)}function showSummary(){const e=$(".summary-content");for(;e.firstChild;)e.removeChild(e.firstChild);if(Object.values(quote).includes("")||0===quote.services.length)return void showAlert("Faltan datos de servicios, hora o fecha","error",".summary-content",!1);const{name:t,date:n,time:a,services:s}=quote,o=document.createElement("p");o.innerHTML="<span>Nombre:</span> "+t;const c=formatDate(n),i=document.createElement("p");i.innerHTML="<span>Fecha:</span> "+c;const r=document.createElement("p");r.innerHTML=`<span>Hora:</span> ${a} hs`;const d=document.createElement("h3");d.textContent="Resumen de servicios",e.appendChild(d),s.forEach(t=>{const{id:n,name:a,price:s}=t,o=document.createElement("div");o.classList.add("service-container");const c=document.createElement("p");c.textContent=a;const i=document.createElement("p");i.innerHTML="<span>Precio:</span> $"+s,o.appendChild(c),o.appendChild(i),e.appendChild(o)});const l=document.createElement("h3");l.textContent="Resumen de cita",e.appendChild(l);const u=document.createElement("button");u.classList.add("button"),u.textContent="Reservar cita",u.onclick=reserveQuote,e.appendChild(o),e.appendChild(i),e.appendChild(r),e.appendChild(u)}function formatDate(e){const t=new Date(e),n=t.getFullYear(),a=t.getMonth(),s=t.getDate()+2;return new Date(Date.UTC(n,a,s)).toLocaleDateString("es-AR",{weekday:"long",day:"numeric",month:"long",year:"numeric"})}async function reserveQuote(){const{id:e,name:t,date:n,time:a,services:s}=quote,o=s.map(e=>e.id),c=new FormData;c.append("userId",e),c.append("date",n),c.append("time",a),c.append("services",o);try{const e="http://localhost:3000/api/quotes",t=await fetch(e,{method:"POST",body:c});(await t.json()).result&&Swal.fire("Correcto!","Se guardó su cita correctamente!","success").then(()=>{window.location.reload()})}catch(e){Swal.fire({icon:"error",title:"Error",text:"Hubo un error al guardar la cita"})}}$(".tabs")&&(consultApi(),clientId(),clientName(),selectDate(),selectTime(),showSummary());